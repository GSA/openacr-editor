{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Item.svelte",
    "../../List.svelte",
    "../../MultiSelection.svelte",
    "../../Select.svelte",
    "../../Selection.svelte",
    "../../VirtualList.svelte",
    "../../App.svelte",
    "../../AddOther.svelte",
    "../../ButtonShowHide.svelte",
    "../../Component.svelte",
    "../../Criteria.svelte",
    "../../DTWithAnchor.svelte",
    "../../Header.svelte",
    "../../HeaderWithAnchor.svelte",
    "../../HelpText.svelte",
    "../../LinkToGuidance.svelte",
    "../../Nav.svelte",
    "../../PagerLink.svelte",
    "../../ProgressBar.svelte",
    "../../Related.svelte",
    "../../YourReport.svelte",
    "../../YourReportProgress.svelte",
    "../../ReportChapter.svelte",
    "../../ReportChapterTableResult.svelte",
    "../../ReportValid.svelte",
    "../../About.svelte"
  ],
  "sourcesContent": [
    "<script>\n    export let isActive = false;\n    export let isFirst = false;\n    export let isHover = false;\n    export let isSelectable = false;\n    export let getOptionLabel = undefined;\n    export let item = undefined;\n    export let filterText = '';\n\n    let itemClasses = '';\n\n    $: {\n        const classes = [];\n        if (isActive) {\n            classes.push('active');\n        }\n        if (isFirst) {\n            classes.push('first');\n        }\n        if (isHover) {\n            classes.push('hover');\n        }\n        if (item.isGroupHeader) {\n            classes.push('groupHeader');\n        }\n        if (item.isGroupItem) {\n            classes.push('groupItem');\n        }\n        if (!isSelectable) {\n            classes.push('notSelectable');\n        }\n        itemClasses = classes.join(' ');\n    }\n</script>\n\n<style>\n    .item {\n        cursor: default;\n        height: var(--height, 42px);\n        line-height: var(--height, 42px);\n        padding: var(--itemPadding, 0 20px);\n        color: var(--itemColor, inherit);\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    .groupHeader {\n        text-transform: var(--groupTitleTextTransform, uppercase);\n    }\n\n    .groupItem {\n        padding-left: var(--groupItemPaddingLeft, 40px);\n    }\n\n    .item:active {\n        background: var(--itemActiveBackground, #b9daff);\n    }\n\n    .item.active {\n        background: var(--itemIsActiveBG, #007aff);\n        color: var(--itemIsActiveColor, #fff);\n    }\n\n   .item.notSelectable {\n        color: var(--itemIsNotSelectableColor, #999);\n    }\n\n    .item.first {\n        border-radius: var(--itemFirstBorderRadius, 4px 4px 0 0);\n    }\n\n    .item.hover:not(.active) {\n        background: var(--itemHoverBG, #e7f2ff);\n        color: var(--itemHoverColor, inherit);\n    }\n</style>\n\n<div class=\"item {itemClasses}\">\n    {@html getOptionLabel(item, filterText)}\n</div>\n",
    "<script>\n    import { beforeUpdate, createEventDispatcher, onMount, tick } from 'svelte';\n    import isOutOfViewport from './utils/isOutOfViewport';\n    import ItemComponent from './Item.svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let container = undefined;\n    export let VirtualList = null;\n    export let Item = ItemComponent;\n    export let isVirtualList = false;\n    export let items = [];\n    export let labelIdentifier = 'label';\n    export let getOptionLabel = (option, filterText) => {\n        if (option)\n            return option.isCreator\n                ? `Create \\\"${filterText}\\\"`\n                : option[labelIdentifier];\n    };\n    export let getGroupHeaderLabel = null;\n    export let itemHeight = 40;\n    export let hoverItemIndex = 0;\n    export let value = undefined;\n    export let optionIdentifier = 'value';\n    export let hideEmptyState = false;\n    export let noOptionsMessage = 'No options';\n    export let isMulti = false;\n    export let activeItemIndex = 0;\n    export let filterText = '';\n    export let parent = null;\n    export let listPlacement = null;\n    export let listAutoWidth = null;\n    export let listOffset = 5;\n\n    let isScrollingTimer = 0;\n    let isScrolling = false;\n    let prev_items;\n\n    onMount(() => {\n        if (items.length > 0 && !isMulti && value) {\n            const _hoverItemIndex = items.findIndex(\n                (item) => item[optionIdentifier] === value[optionIdentifier]\n            );\n\n            if (_hoverItemIndex) {\n                hoverItemIndex = _hoverItemIndex;\n            }\n        }\n\n        scrollToActiveItem('active');\n\n        container.addEventListener(\n            'scroll',\n            () => {\n                clearTimeout(isScrollingTimer);\n\n                isScrollingTimer = setTimeout(() => {\n                    isScrolling = false;\n                }, 100);\n            },\n            false\n        );\n    });\n\n    beforeUpdate(() => {\n        if (!items) items = [];\n        if (items !== prev_items && items.length > 0) {\n            hoverItemIndex = 0;\n        }\n\n        prev_items = items;\n    });\n\n    function handleSelect(item) {\n        if (item.isCreator) return;\n        dispatch('itemSelected', item);\n    }\n\n    function handleHover(i) {\n        if (isScrolling) return;\n        hoverItemIndex = i;\n    }\n\n    function handleClick(args) {\n        const { item, i, event } = args;\n        event.stopPropagation();\n\n        if (\n            value &&\n            !isMulti &&\n            value[optionIdentifier] === item[optionIdentifier]\n        )\n            return closeList();\n\n        if (item.isCreator) {\n            dispatch('itemCreated', filterText);\n        } else if (isItemSelectable(item)) {\n            activeItemIndex = i;\n            hoverItemIndex = i;\n            handleSelect(item);\n        }\n    }\n\n    function closeList() {\n        dispatch('closeList');\n    }\n\n    async function updateHoverItem(increment) {\n        if (isVirtualList) return;\n\n        let isNonSelectableItem = true;\n\n        while (isNonSelectableItem) {\n            if (increment > 0 && hoverItemIndex === items.length - 1) {\n                hoverItemIndex = 0;\n            } else if (increment < 0 && hoverItemIndex === 0) {\n                hoverItemIndex = items.length - 1;\n            } else {\n                hoverItemIndex = hoverItemIndex + increment;\n            }\n\n            isNonSelectableItem = !isItemSelectable(items[hoverItemIndex]);\n        }\n\n        await tick();\n\n        scrollToActiveItem('hover');\n    }\n\n    function handleKeyDown(e) {\n        switch (e.key) {\n            case 'Escape':\n                e.preventDefault();\n                closeList();\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n                items.length && updateHoverItem(1);\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                items.length && updateHoverItem(-1);\n                break;\n            case 'Enter':\n                e.preventDefault();\n                if (items.length === 0) break;\n                const hoverItem = items[hoverItemIndex];\n                if (\n                    value &&\n                    !isMulti &&\n                    value[optionIdentifier] === hoverItem[optionIdentifier]\n                ) {\n                    closeList();\n                    break;\n                }\n                if (hoverItem.isCreator) {\n                    dispatch('itemCreated', filterText);\n                } else {\n                    activeItemIndex = hoverItemIndex;\n                    handleSelect(items[hoverItemIndex]);\n                }\n                break;\n            case 'Tab':\n                e.preventDefault();\n                if (items.length === 0) {\n                    return closeList();\n                }\n                if (\n                    value &&\n                    value[optionIdentifier] ===\n                        items[hoverItemIndex][optionIdentifier]\n                )\n                    return closeList();\n                activeItemIndex = hoverItemIndex;\n                handleSelect(items[hoverItemIndex]);\n                break;\n        }\n    }\n\n    function scrollToActiveItem(className) {\n        if (isVirtualList || !container) return;\n\n        let offsetBounding;\n        const focusedElemBounding = container.querySelector(\n            `.listItem .${className}`\n        );\n\n        if (focusedElemBounding) {\n            offsetBounding =\n                container.getBoundingClientRect().bottom -\n                focusedElemBounding.getBoundingClientRect().bottom;\n        }\n\n        container.scrollTop -= offsetBounding;\n    }\n\n    function isItemActive(item, value, optionIdentifier) {\n        return value && value[optionIdentifier] === item[optionIdentifier];\n    }\n\n    function isItemFirst(itemIndex) {\n        return itemIndex === 0;\n    }\n\n    function isItemHover(hoverItemIndex, item, itemIndex, items) {\n        return isItemSelectable(item) && (hoverItemIndex === itemIndex || items.length === 1);\n    }\n\n    function isItemSelectable(item) {\n        return (item.isGroupHeader && item.isSelectable) ||\n            item.selectable ||\n            !item.hasOwnProperty('selectable') // Default; if `selectable` was not specified, the object is selectable\n    }\n\n    let listStyle;\n    function computePlacement() {\n        const { height, width } = parent.getBoundingClientRect();\n\n        listStyle = '';\n        listStyle += `min-width:${width}px;width:${\n            listAutoWidth ? 'auto' : '100%'\n        };`;\n\n        if (\n            listPlacement === 'top' ||\n            (listPlacement === 'auto' && isOutOfViewport(parent, container).bottom)\n        ) {\n            listStyle += `bottom:${height + listOffset}px;`;\n        } else {\n            listStyle += `top:${height + listOffset}px;`;\n        }\n    }\n\n    $: {\n        if (parent && container) computePlacement();\n    }\n</script>\n\n<style>\n    .listContainer {\n        box-shadow: var(--listShadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));\n        border-radius: var(--listBorderRadius, 4px);\n        max-height: var(--listMaxHeight, 250px);\n        overflow-y: auto;\n        background: var(--listBackground, #fff);\n        border: var(--listBorder, none);\n        position: var(--listPosition, absolute);\n        z-index: var(--listZIndex, 2);\n        width: 100%;\n        left: var(--listLeft, 0);\n        right: var(--listRight, 0);\n    }\n\n    .virtualList {\n        height: var(--virtualListHeight, 200px);\n    }\n\n    .listGroupTitle {\n        color: var(--groupTitleColor, #8f8f8f);\n        cursor: default;\n        font-size: var(--groupTitleFontSize, 12px);\n        font-weight: var(--groupTitleFontWeight, 600);\n        height: var(--height, 42px);\n        line-height: var(--height, 42px);\n        padding: var(--groupTitlePadding, 0 20px);\n        text-overflow: ellipsis;\n        overflow-x: hidden;\n        white-space: nowrap;\n        text-transform: var(--groupTitleTextTransform, uppercase);\n    }\n\n    .empty {\n        text-align: var(--listEmptyTextAlign, center);\n        padding: var(--listEmptyPadding, 20px 0);\n        color: var(--listEmptyColor, #78848f);\n    }\n</style>\n\n<svelte:window on:keydown={handleKeyDown} on:resize={computePlacement} />\n\n<div\n    class=\"listContainer\"\n    class:virtualList={isVirtualList}\n    bind:this={container}\n    style={listStyle}>\n    {#if isVirtualList}\n        <svelte:component\n            this={VirtualList}\n            {items}\n            {itemHeight}\n            let:item\n            let:i>\n            <div\n                on:mouseover={() => handleHover(i)}\n                on:focus={() => handleHover(i)}\n                on:click={(event) => handleClick({ item, i, event })}\n                class=\"listItem\">\n                <svelte:component\n                    this={Item}\n                    {item}\n                    {filterText}\n                    {getOptionLabel}\n                    isFirst={isItemFirst(i)}\n                    isActive={isItemActive(item, value, optionIdentifier)}\n                    isHover={isItemHover(hoverItemIndex, item, i, items)}\n                    isSelectable={isItemSelectable(item)} />\n            </div>\n        </svelte:component>\n    {:else}\n        {#each items as item, i}\n            {#if item.isGroupHeader && !item.isSelectable}\n                <div class=\"listGroupTitle\">{getGroupHeaderLabel(item)}</div>\n            {:else}\n                <div\n                    on:mouseover={() => handleHover(i)}\n                    on:focus={() => handleHover(i)}\n                    on:click={(event) => handleClick({ item, i, event })}\n                    class=\"listItem\"\n                    tabindex=\"-1\">\n                    <svelte:component\n                        this={Item}\n                        {item}\n                        {filterText}\n                        {getOptionLabel}\n                        isFirst={isItemFirst(i)}\n                        isActive={isItemActive(item, value, optionIdentifier)}\n                        isHover={isItemHover(hoverItemIndex, item, i, items)}\n                        isSelectable={isItemSelectable(item)} />\n                </div>\n            {/if}\n        {:else}\n            {#if !hideEmptyState}\n                <div class=\"empty\">{noOptionsMessage}</div>\n            {/if}\n        {/each}\n    {/if}\n</div>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n\n    const dispatch = createEventDispatcher();\n\n    export let value = [];\n    export let activeValue = undefined;\n    export let isDisabled = false;\n    export let multiFullItemClearable = false;\n    export let getSelectionLabel = undefined;\n\n    function handleClear(i, event) {\n        event.stopPropagation();\n        dispatch('multiItemClear', { i });\n    }\n</script>\n\n<style>\n    .multiSelectItem {\n        background: var(--multiItemBG, #ebedef);\n        margin: var(--multiItemMargin, 5px 5px 0 0);\n        border-radius: var(--multiItemBorderRadius, 16px);\n        height: var(--multiItemHeight, 32px);\n        line-height: var(--multiItemHeight, 32px);\n        display: flex;\n        cursor: default;\n        padding: var(--multiItemPadding, 0 10px 0 15px);\n        max-width: 100%;\n    }\n\n    .multiSelectItem_label {\n        margin: var(--multiLabelMargin, 0 5px 0 0);\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .multiSelectItem:hover,\n    .multiSelectItem.active {\n        background-color: var(--multiItemActiveBG, #006fff);\n        color: var(--multiItemActiveColor, #fff);\n    }\n\n    .multiSelectItem.disabled:hover {\n        background: var(--multiItemDisabledHoverBg, #ebedef);\n        color: var(--multiItemDisabledHoverColor, #c1c6cc);\n    }\n\n    .multiSelectItem_clear {\n        border-radius: var(--multiClearRadius, 50%);\n        background: var(--multiClearBG, #52616f);\n        min-width: var(--multiClearWidth, 16px);\n        max-width: var(--multiClearWidth, 16px);\n        height: var(--multiClearHeight, 16px);\n        position: relative;\n        top: var(--multiClearTop, 8px);\n        text-align: var(--multiClearTextAlign, center);\n        padding: var(--multiClearPadding, 1px);\n    }\n\n    .multiSelectItem_clear:hover,\n    .active .multiSelectItem_clear {\n        background: var(--multiClearHoverBG, #fff);\n    }\n\n    .multiSelectItem_clear:hover svg,\n    .active .multiSelectItem_clear svg {\n        fill: var(--multiClearHoverFill, #006fff);\n    }\n\n    .multiSelectItem_clear svg {\n        fill: var(--multiClearFill, #ebedef);\n        vertical-align: top;\n    }\n</style>\n\n{#each value as item, i}\n    <div\n        class=\"multiSelectItem {activeValue === i ? 'active' : ''} {isDisabled\n            ? 'disabled'\n            : ''}\"\n        on:click={(event) =>\n            multiFullItemClearable ? handleClear(i, event) : {}}>\n        <div class=\"multiSelectItem_label\">\n            {@html getSelectionLabel(item)}\n        </div>\n        {#if !isDisabled && !multiFullItemClearable}\n            <div\n                class=\"multiSelectItem_clear\"\n                on:click={(event) => handleClear(i, event)}>\n                <svg\n                    width=\"100%\"\n                    height=\"100%\"\n                    viewBox=\"-2 -2 50 50\"\n                    focusable=\"false\"\n                    aria-hidden=\"true\"\n                    role=\"presentation\">\n                    <path\n                        d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124 l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\" />\n                </svg>\n            </div>\n        {/if}\n    </div>\n{/each}\n",
    "<script>\n    import { beforeUpdate, createEventDispatcher, onMount } from 'svelte';\n\n    import _List from './List.svelte';\n    import _Item from './Item.svelte';\n    import _Selection from './Selection.svelte';\n    import _MultiSelection from './MultiSelection.svelte';\n    import _VirtualList from './VirtualList.svelte';\n    import _ClearIcon from './ClearIcon.svelte';\n    import debounce from './utils/debounce';\n\n    const dispatch = createEventDispatcher();\n\n    export let id = null;\n    export let container = undefined;\n    export let input = undefined;\n    export let isMulti = false;\n    export let multiFullItemClearable = false;\n    export let isDisabled = false;\n    export let isCreatable = false;\n    export let isFocused = false;\n    export let value = null;\n    export let filterText = '';\n    export let placeholder = 'Select...';\n    export let placeholderAlwaysShow = false;\n    export let items = null;\n    export let itemFilter = (label, filterText, option) =>\n        `${label}`.toLowerCase().includes(filterText.toLowerCase());\n    export let groupBy = undefined;\n    export let groupFilter = (groups) => groups;\n    export let isGroupHeaderSelectable = false;\n    export let getGroupHeaderLabel = (option) => {\n        return option[labelIdentifier] || option.id;\n    };\n    export let labelIdentifier = 'label';\n    export let getOptionLabel = (option, filterText) => {\n        return option.isCreator\n            ? `Create \\\"${filterText}\\\"`\n            : option[labelIdentifier];\n    };\n    export let optionIdentifier = 'value';\n    export let loadOptions = undefined;\n    export let hasError = false;\n    export let containerStyles = '';\n    export let getSelectionLabel = (option) => {\n        if (option) return option[labelIdentifier];\n        else return null;\n    };\n\n    export let createGroupHeaderItem = (groupValue) => {\n        return {\n            value: groupValue,\n            label: groupValue,\n        };\n    };\n\n    export let createItem = (filterText) => {\n        return {\n            value: filterText,\n            label: filterText,\n        };\n    };\n\n    export const getFilteredItems = () => {\n        return filteredItems;\n    };\n\n    export let isSearchable = true;\n    export let inputStyles = '';\n    export let isClearable = true;\n    export let isWaiting = false;\n    export let listPlacement = 'auto';\n    export let listOpen = false;\n    export let isVirtualList = false;\n    export let loadOptionsInterval = 300;\n    export let noOptionsMessage = 'No options';\n    export let hideEmptyState = false;\n    export let inputAttributes = {};\n    export let listAutoWidth = true;\n    export let itemHeight = 40;\n    export let Icon = undefined;\n    export let iconProps = {};\n    export let showChevron = false;\n    export let showIndicator = false;\n    export let containerClasses = '';\n    export let indicatorSvg = undefined;\n    export let listOffset = 5;\n\n    export let ClearIcon = _ClearIcon;\n    export let Item = _Item;\n    export let List = _List;\n    export let Selection = _Selection;\n    export let MultiSelection = _MultiSelection;\n    export let VirtualList = _VirtualList;\n\n    function filterMethod(args) {\n        if (args.loadOptions && args.filterText.length > 0) return;\n        if (!args.items) return [];\n\n        if (\n            args.items &&\n            args.items.length > 0 &&\n            typeof args.items[0] !== 'object'\n        ) {\n            args.items = convertStringItemsToObjects(args.items);\n        }\n\n        let filterResults = args.items.filter((item) => {\n            let matchesFilter = itemFilter(\n                getOptionLabel(item, args.filterText),\n                args.filterText,\n                item\n            );\n\n            if (\n                matchesFilter &&\n                args.isMulti &&\n                args.value &&\n                Array.isArray(args.value)\n            ) {\n                matchesFilter = !args.value.some((x) => {\n                    return (\n                        x[args.optionIdentifier] === item[args.optionIdentifier]\n                    );\n                });\n            }\n\n            return matchesFilter;\n        });\n\n        if (args.groupBy) {\n            filterResults = filterGroupedItems(filterResults);\n        }\n\n        if (args.isCreatable) {\n            filterResults = addCreatableItem(filterResults, args.filterText);\n        }\n\n        return filterResults;\n    }\n\n    function addCreatableItem(_items, _filterText) {\n        if (_filterText.length === 0) return _items;\n        const itemToCreate = createItem(_filterText);\n        if (_items[0] && _filterText === _items[0][labelIdentifier])\n            return _items;\n        itemToCreate.isCreator = true;\n        return [..._items, itemToCreate];\n    }\n\n    $: filteredItems = filterMethod({\n        loadOptions,\n        filterText,\n        items,\n        value,\n        isMulti,\n        optionIdentifier,\n        groupBy,\n        isCreatable,\n    });\n\n    export let selectedValue = null;\n    $: {\n        if (selectedValue)\n            console.warn(\n                'selectedValue is no longer used. Please use value instead.'\n            );\n    }\n\n    let activeValue;\n    let prev_value;\n    let prev_filterText;\n    let prev_isFocused;\n    let prev_isMulti;\n    let hoverItemIndex;\n\n    const getItems = debounce(async () => {\n        isWaiting = true;\n        let res = await loadOptions(filterText).catch((err) => {\n            console.warn('svelte-select loadOptions error :>> ', err);\n            dispatch('error', { type: 'loadOptions', details: err });\n        });\n\n        if (res && !res.cancelled) {\n            if (res) {\n                if (res && res.length > 0 && typeof res[0] !== 'object') {\n                    res = convertStringItemsToObjects(res);\n                }\n                filteredItems = [...res];\n                dispatch('loaded', { items: filteredItems });\n            } else {\n                filteredItems = [];\n            }\n\n            if (isCreatable) {\n                filteredItems = addCreatableItem(filteredItems, filterText);\n            }\n\n            isWaiting = false;\n            isFocused = true;\n            listOpen = true;\n        }\n    }, loadOptionsInterval);\n\n    $: updateValueDisplay(items);\n\n    function setValue() {\n        if (typeof value === 'string') {\n            value = {\n                [optionIdentifier]: value,\n                label: value,\n            };\n        } else if (isMulti && Array.isArray(value) && value.length > 0) {\n            value = value.map((item) =>\n                typeof item === 'string' ? { value: item, label: item } : item\n            );\n        }\n    }\n\n    let _inputAttributes;\n    function assignInputAttributes() {\n        _inputAttributes = Object.assign(\n            {\n                autocapitalize: 'none',\n                autocomplete: 'off',\n                autocorrect: 'off',\n                spellcheck: false,\n                tabindex: 0,\n                type: 'text',\n                'aria-autocomplete': 'list',\n            },\n            inputAttributes\n        );\n\n        if (id) {\n            _inputAttributes.id = id;\n        }\n\n        if (!isSearchable) {\n            _inputAttributes.readonly = true;\n        }\n    }\n\n    function convertStringItemsToObjects(_items) {\n        return _items.map((item, index) => {\n            return {\n                index,\n                value: item,\n                label: `${item}`,\n            };\n        });\n    }\n\n    function filterGroupedItems(_items) {\n        const groupValues = [];\n        const groups = {};\n\n        _items.forEach((item) => {\n            const groupValue = groupBy(item);\n\n            if (!groupValues.includes(groupValue)) {\n                groupValues.push(groupValue);\n                groups[groupValue] = [];\n\n                if (groupValue) {\n                    groups[groupValue].push(\n                        Object.assign(createGroupHeaderItem(groupValue, item), {\n                            id: groupValue,\n                            isGroupHeader: true,\n                            isSelectable: isGroupHeaderSelectable,\n                        })\n                    );\n                }\n            }\n\n            groups[groupValue].push(\n                Object.assign({ isGroupItem: !!groupValue }, item)\n            );\n        });\n\n        const sortedGroupedItems = [];\n\n        groupFilter(groupValues).forEach((groupValue) => {\n            sortedGroupedItems.push(...groups[groupValue]);\n        });\n\n        return sortedGroupedItems;\n    }\n\n    function dispatchSelectedItem() {\n        if (isMulti) {\n            if (JSON.stringify(value) !== JSON.stringify(prev_value)) {\n                if (checkValueForDuplicates()) {\n                    dispatch('select', value);\n                }\n            }\n            return;\n        }\n\n        if (\n            !prev_value ||\n            JSON.stringify(value[optionIdentifier]) !==\n                JSON.stringify(prev_value[optionIdentifier])\n        ) {\n            dispatch('select', value);\n        }\n    }\n\n    function setupFocus() {\n        if (isFocused || listOpen) {\n            handleFocus();\n        } else {\n            if (input) input.blur();\n        }\n    }\n\n    function setupMulti() {\n        if (value) {\n            if (Array.isArray(value)) {\n                value = [...value];\n            } else {\n                value = [value];\n            }\n        }\n    }\n\n    function setupSingle() {\n        if (value) value = null;\n    }\n\n    $: {\n        if (value) setValue();\n    }\n\n    $: {\n        if (inputAttributes || !isSearchable) assignInputAttributes();\n    }\n\n    $: {\n        if (isMulti) {\n            setupMulti();\n        }\n\n        if (prev_isMulti && !isMulti) {\n            setupSingle();\n        }\n    }\n\n    $: {\n        if (isMulti && value && value.length > 1) {\n            checkValueForDuplicates();\n        }\n    }\n\n    $: {\n        if (value) dispatchSelectedItem();\n    }\n\n    $: {\n        if (!value && isMulti && prev_value) {\n            dispatch('select', value);\n        }\n    }\n\n    $: {\n        if (isFocused !== prev_isFocused) {\n            setupFocus();\n        }\n    }\n\n    $: {\n        if (filterText !== prev_filterText) {\n            setupFilterText();\n        }\n    }\n\n    function setupFilterText() {\n        if (filterText.length === 0) return;\n\n        isFocused = true;\n        listOpen = true;\n\n        if (loadOptions) {\n            getItems();\n        } else {\n            listOpen = true;\n\n            if (isMulti) {\n                activeValue = undefined;\n            }\n        }\n    }\n\n    $: showSelectedItem = value && filterText.length === 0;\n    $: showClearIcon =\n        showSelectedItem && isClearable && !isDisabled && !isWaiting;\n    $: placeholderText =\n        placeholderAlwaysShow && isMulti\n            ? placeholder\n            : value\n            ? ''\n            : placeholder;\n    $: showMultiSelect = isMulti && value && value.length > 0;\n\n    beforeUpdate(async () => {\n        prev_value = value;\n        prev_filterText = filterText;\n        prev_isFocused = isFocused;\n        prev_isMulti = isMulti;\n    });\n\n    function checkValueForDuplicates() {\n        let noDuplicates = true;\n        if (value) {\n            const ids = [];\n            const uniqueValues = [];\n\n            value.forEach((val) => {\n                if (!ids.includes(val[optionIdentifier])) {\n                    ids.push(val[optionIdentifier]);\n                    uniqueValues.push(val);\n                } else {\n                    noDuplicates = false;\n                }\n            });\n\n            if (!noDuplicates) value = uniqueValues;\n        }\n        return noDuplicates;\n    }\n\n    function findItem(selection) {\n        let matchTo = selection\n            ? selection[optionIdentifier]\n            : value[optionIdentifier];\n        return items.find((item) => item[optionIdentifier] === matchTo);\n    }\n\n    function updateValueDisplay(items) {\n        if (\n            !items ||\n            items.length === 0 ||\n            items.some((item) => typeof item !== 'object')\n        )\n            return;\n        if (\n            !value ||\n            (isMulti\n                ? value.some(\n                      (selection) => !selection || !selection[optionIdentifier]\n                  )\n                : !value[optionIdentifier])\n        )\n            return;\n\n        if (Array.isArray(value)) {\n            value = value.map((selection) => findItem(selection) || selection);\n        } else {\n            value = findItem() || value;\n        }\n    }\n\n    function handleMultiItemClear(event) {\n        const { detail } = event;\n        const itemToRemove = value[detail ? detail.i : value.length - 1];\n\n        if (value.length === 1) {\n            value = undefined;\n        } else {\n            value = value.filter((item) => {\n                return item !== itemToRemove;\n            });\n        }\n\n        dispatch('clear', itemToRemove);\n    }\n\n    function handleKeyDown(e) {\n        if (!isFocused) return;\n\n        switch (e.key) {\n            case 'ArrowDown':\n                e.preventDefault();\n                listOpen = true;\n                activeValue = undefined;\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                listOpen = true;\n                activeValue = undefined;\n                break;\n            case 'Tab':\n                if (!listOpen) isFocused = false;\n                break;\n            case 'Backspace':\n                if (!isMulti || filterText.length > 0) return;\n                if (isMulti && value && value.length > 0) {\n                    handleMultiItemClear(\n                        activeValue !== undefined\n                            ? activeValue\n                            : value.length - 1\n                    );\n                    if (activeValue === 0 || activeValue === undefined) break;\n                    activeValue =\n                        value.length > activeValue\n                            ? activeValue - 1\n                            : undefined;\n                }\n                break;\n            case 'ArrowLeft':\n                if (!isMulti || filterText.length > 0) return;\n                if (activeValue === undefined) {\n                    activeValue = value.length - 1;\n                } else if (value.length > activeValue && activeValue !== 0) {\n                    activeValue -= 1;\n                }\n                break;\n            case 'ArrowRight':\n                if (\n                    !isMulti ||\n                    filterText.length > 0 ||\n                    activeValue === undefined\n                )\n                    return;\n                if (activeValue === value.length - 1) {\n                    activeValue = undefined;\n                } else if (activeValue < value.length - 1) {\n                    activeValue += 1;\n                }\n                break;\n        }\n    }\n\n    function handleFocus() {\n        isFocused = true;\n        if (input) input.focus();\n    }\n\n    function handleWindowEvent(event) {\n        if (!container) return;\n        const eventTarget =\n            event.path && event.path.length > 0 ? event.path[0] : event.target;\n        if (container.contains(eventTarget)) return;\n        isFocused = false;\n        listOpen = false;\n        activeValue = undefined;\n        if (input) input.blur();\n    }\n\n    function handleClick() {\n        if (isDisabled) return;\n        isFocused = true;\n        listOpen = !listOpen;\n    }\n\n    export function handleClear() {\n        value = undefined;\n        listOpen = false;\n        dispatch('clear', value);\n        handleFocus();\n    }\n\n    onMount(() => {\n        if (isFocused && input) input.focus();\n    });\n\n    $: listProps = {\n        Item,\n        filterText,\n        optionIdentifier,\n        noOptionsMessage,\n        hideEmptyState,\n        isVirtualList,\n        VirtualList,\n        value,\n        isMulti,\n        getGroupHeaderLabel,\n        items: filteredItems,\n        itemHeight,\n        getOptionLabel,\n        listPlacement,\n        parent: container,\n        listAutoWidth,\n        listOffset,\n    };\n\n    function itemSelected(event) {\n        const { detail } = event;\n\n        if (detail) {\n            filterText = '';\n            const item = Object.assign({}, detail);\n\n            if (!item.isGroupHeader || item.isSelectable) {\n                if (isMulti) {\n                    value = value ? value.concat([item]) : [item];\n                } else {\n                    value = item;\n                }\n\n                value = value;\n\n                setTimeout(() => {\n                    listOpen = false;\n                    activeValue = undefined;\n                });\n            }\n        }\n    }\n\n    function itemCreated(event) {\n        const { detail } = event;\n        if (isMulti) {\n            value = value || [];\n            value = [...value, createItem(detail)];\n        } else {\n            value = createItem(detail);\n        }\n\n        dispatch('itemCreated', detail);\n        filterText = '';\n        listOpen = false;\n        activeValue = undefined;\n    }\n\n    function closeList() {\n        filterText = '';\n        listOpen = false;\n    }\n\n    export let ariaValues = (values) => {\n        return `Option ${values}, selected.`;\n    };\n\n    export let ariaListOpen = (label, count) => {\n        return `You are currently focused on option ${label}. There are ${count} results available.`;\n    };\n\n    export let ariaFocused = () => {\n        return `Select is focused, type to refine list, press down to open the menu.`;\n    };\n\n    function handleAriaSelection() {\n        let selected = undefined;\n\n        if (isMulti && value.length > 0) {\n            selected = value.map((v) => getSelectionLabel(v)).join(', ');\n        } else {\n            selected = getSelectionLabel(value);\n        }\n\n        return ariaValues(selected);\n    }\n\n    function handleAriaContent() {\n        if (!isFocused || !filteredItems || filteredItems.length === 0)\n            return '';\n\n        let _item = filteredItems[hoverItemIndex];\n        if (listOpen && _item) {\n            let label = getSelectionLabel(_item);\n            let count = filteredItems ? filteredItems.length : 0;\n\n            return ariaListOpen(label, count);\n        } else {\n            return ariaFocused();\n        }\n    }\n\n    $: ariaSelection = value ? handleAriaSelection(isMulti) : '';\n    $: ariaContext = handleAriaContent(\n        filteredItems,\n        hoverItemIndex,\n        isFocused,\n        listOpen\n    );\n</script>\n\n<style>\n    .selectContainer {\n        --internalPadding: 0 16px;\n        border: var(--border, 1px solid #d8dbdf);\n        border-radius: var(--borderRadius, 3px);\n        box-sizing: border-box;\n        height: var(--height, 42px);\n        position: relative;\n        display: flex;\n        align-items: center;\n        padding: var(--padding, var(--internalPadding));\n        background: var(--background, #fff);\n        margin: var(--margin, 0);\n    }\n\n    .selectContainer input {\n        cursor: default;\n        border: none;\n        color: var(--inputColor, #3f4f5f);\n        height: var(--height, 42px);\n        line-height: var(--height, 42px);\n        padding: var(--inputPadding, var(--padding, var(--internalPadding)));\n        width: 100%;\n        background: transparent;\n        font-size: var(--inputFontSize, 14px);\n        letter-spacing: var(--inputLetterSpacing, -0.08px);\n        position: absolute;\n        left: var(--inputLeft, 0);\n        margin: var(--inputMargin, 0);\n    }\n\n    .selectContainer input::placeholder {\n        color: var(--placeholderColor, #78848f);\n        opacity: var(--placeholderOpacity, 1);\n    }\n\n    .selectContainer input:focus {\n        outline: none;\n    }\n\n    .selectContainer:hover {\n        border-color: var(--borderHoverColor, #b2b8bf);\n    }\n\n    .selectContainer.focused {\n        border-color: var(--borderFocusColor, #006fe8);\n    }\n\n    .selectContainer.disabled {\n        background: var(--disabledBackground, #ebedef);\n        border-color: var(--disabledBorderColor, #ebedef);\n        color: var(--disabledColor, #c1c6cc);\n    }\n\n    .selectContainer.disabled input::placeholder {\n        color: var(--disabledPlaceholderColor, #c1c6cc);\n        opacity: var(--disabledPlaceholderOpacity, 1);\n    }\n\n    .selectedItem {\n        line-height: var(--height, 42px);\n        height: var(--height, 42px);\n        overflow-x: hidden;\n        padding: var(--selectedItemPadding, 0 20px 0 0);\n    }\n\n    .selectedItem:focus {\n        outline: none;\n    }\n\n    .clearSelect {\n        position: absolute;\n        right: var(--clearSelectRight, 10px);\n        top: var(--clearSelectTop, 11px);\n        bottom: var(--clearSelectBottom, 11px);\n        width: var(--clearSelectWidth, 20px);\n        color: var(--clearSelectColor, #c5cacf);\n        flex: none !important;\n    }\n\n    .clearSelect:hover {\n        color: var(--clearSelectHoverColor, #2c3e50);\n    }\n\n    .selectContainer.focused .clearSelect {\n        color: var(--clearSelectFocusColor, #3f4f5f);\n    }\n\n    .indicator {\n        position: absolute;\n        right: var(--indicatorRight, 10px);\n        top: var(--indicatorTop, 11px);\n        width: var(--indicatorWidth, 20px);\n        height: var(--indicatorHeight, 20px);\n        color: var(--indicatorColor, #c5cacf);\n    }\n\n    .indicator svg {\n        display: inline-block;\n        fill: var(--indicatorFill, currentcolor);\n        line-height: 1;\n        stroke: var(--indicatorStroke, currentcolor);\n        stroke-width: 0;\n    }\n\n    .spinner {\n        position: absolute;\n        right: var(--spinnerRight, 10px);\n        top: var(--spinnerLeft, 11px);\n        width: var(--spinnerWidth, 20px);\n        height: var(--spinnerHeight, 20px);\n        color: var(--spinnerColor, #51ce6c);\n        animation: rotate 0.75s linear infinite;\n    }\n\n    .spinner_icon {\n        display: block;\n        height: 100%;\n        transform-origin: center center;\n        width: 100%;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        margin: auto;\n        -webkit-transform: none;\n    }\n\n    .spinner_path {\n        stroke-dasharray: 90;\n        stroke-linecap: round;\n    }\n\n    .multiSelect {\n        display: flex;\n        padding: var(--multiSelectPadding, 0 35px 0 16px);\n        height: auto;\n        flex-wrap: wrap;\n        align-items: stretch;\n    }\n\n    .multiSelect > * {\n        flex: 1 1 50px;\n    }\n\n    .selectContainer.multiSelect input {\n        padding: var(--multiSelectInputPadding, 0);\n        position: relative;\n        margin: var(--multiSelectInputMargin, 0);\n    }\n\n    .hasError {\n        border: var(--errorBorder, 1px solid #ff2d55);\n        background: var(--errorBackground, #fff);\n    }\n\n    .a11yText {\n        z-index: 9999;\n        border: 0px;\n        clip: rect(1px, 1px, 1px, 1px);\n        height: 1px;\n        width: 1px;\n        position: absolute;\n        overflow: hidden;\n        padding: 0px;\n        white-space: nowrap;\n    }\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n</style>\n\n<svelte:window\n    on:click={handleWindowEvent}\n    on:focusin={handleWindowEvent}\n    on:keydown={handleKeyDown} />\n\n<div\n    class=\"selectContainer {containerClasses}\"\n    class:hasError\n    class:multiSelect={isMulti}\n    class:disabled={isDisabled}\n    class:focused={isFocused}\n    style={containerStyles}\n    on:click={handleClick}\n    bind:this={container}>\n    <span\n        aria-live=\"polite\"\n        aria-atomic=\"false\"\n        aria-relevant=\"additions text\"\n        class=\"a11yText\">\n        {#if isFocused}\n            <span id=\"aria-selection\">{ariaSelection}</span>\n            <span id=\"aria-context\">\n                {ariaContext}\n            </span>\n        {/if}\n    </span>\n\n    {#if Icon}\n        <svelte:component this={Icon} {...iconProps} />\n    {/if}\n\n    {#if showMultiSelect}\n        <svelte:component\n            this={MultiSelection}\n            {value}\n            {getSelectionLabel}\n            {activeValue}\n            {isDisabled}\n            {multiFullItemClearable}\n            on:multiItemClear={handleMultiItemClear}\n            on:focus={handleFocus} />\n    {/if}\n\n    <input\n        readOnly={!isSearchable}\n        {..._inputAttributes}\n        bind:this={input}\n        on:focus={handleFocus}\n        bind:value={filterText}\n        placeholder={placeholderText}\n        style={inputStyles}\n        disabled={isDisabled} />\n\n    {#if !isMulti && showSelectedItem}\n        <div class=\"selectedItem\" on:focus={handleFocus}>\n            <svelte:component\n                this={Selection}\n                item={value}\n                {getSelectionLabel} />\n        </div>\n    {/if}\n\n    {#if showClearIcon}\n        <div\n            class=\"clearSelect\"\n            on:click|preventDefault={handleClear}\n            aria-hidden=\"true\">\n            <svelte:component this={ClearIcon} />\n        </div>\n    {/if}\n\n    {#if !showClearIcon && (showIndicator || (showChevron && !value) || (!isSearchable && !isDisabled && !isWaiting && ((showSelectedItem && !isClearable) || !showSelectedItem)))}\n        <div class=\"indicator\" aria-hidden=\"true\">\n            {#if indicatorSvg}\n                {@html indicatorSvg}\n            {:else}\n                <svg\n                    width=\"100%\"\n                    height=\"100%\"\n                    viewBox=\"0 0 20 20\"\n                    focusable=\"false\"\n                    aria-hidden=\"true\">\n                    <path\n                        d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747\n          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0\n          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502\n          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0\n          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\n                </svg>\n            {/if}\n        </div>\n    {/if}\n\n    {#if isWaiting}\n        <div class=\"spinner\">\n            <svg class=\"spinner_icon\" viewBox=\"25 25 50 50\">\n                <circle\n                    class=\"spinner_path\"\n                    cx=\"50\"\n                    cy=\"50\"\n                    r=\"20\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"5\"\n                    stroke-miterlimit=\"10\" />\n            </svg>\n        </div>\n    {/if}\n\n    {#if listOpen}\n        <svelte:component\n            this={List}\n            {...listProps}\n            bind:hoverItemIndex\n            on:itemSelected={itemSelected}\n            on:itemCreated={itemCreated}\n            on:closeList={closeList} />\n    {/if}\n\n    {#if !isMulti || (isMulti && !showMultiSelect)}\n        <input\n            name={inputAttributes.name}\n            type=\"hidden\"\n            value={value ? getSelectionLabel(value) : null} />\n    {/if}\n\n    {#if isMulti && showMultiSelect}\n        {#each value as item}\n            <input\n                name={inputAttributes.name}\n                type=\"hidden\"\n                value={item ? getSelectionLabel(item) : null} />\n        {/each}\n    {/if}\n</div>\n",
    "<script>\n    export let getSelectionLabel = undefined;\n    export let item = undefined;\n</script>\n\n<style>\n    .selection {\n        text-overflow: ellipsis;\n        overflow-x: hidden;\n        white-space: nowrap;\n    }\n</style>\n\n<div class=\"selection\">\n    {@html getSelectionLabel(item)}\n</div>\n",
    "<script>\n    import { onMount, tick } from 'svelte';\n\n    export let items = undefined;\n    export let height = '100%';\n    export let itemHeight = 40;\n    export let hoverItemIndex = 0;\n    export let start = 0;\n    export let end = 0;\n\n    let height_map = [];\n    let rows;\n    let viewport;\n    let contents;\n    let viewport_height = 0;\n    let visible;\n    let mounted;\n\n    let top = 0;\n    let bottom = 0;\n    let average_height;\n\n    $: visible = items.slice(start, end).map((data, i) => {\n        return { index: i + start, data };\n    });\n\n    $: if (mounted) refresh(items, viewport_height, itemHeight);\n\n    async function refresh(items, viewport_height, itemHeight) {\n        const { scrollTop } = viewport;\n\n        await tick();\n\n        let content_height = top - scrollTop;\n        let i = start;\n\n        while (content_height < viewport_height && i < items.length) {\n            let row = rows[i - start];\n\n            if (!row) {\n                end = i + 1;\n                await tick();\n                row = rows[i - start];\n            }\n\n            const row_height = (height_map[i] = itemHeight || row.offsetHeight);\n            content_height += row_height;\n            i += 1;\n        }\n\n        end = i;\n\n        const remaining = items.length - end;\n        average_height = (top + content_height) / end;\n\n        bottom = remaining * average_height;\n        height_map.length = items.length;\n\n        if (viewport) viewport.scrollTop = 0;\n    }\n\n    async function handle_scroll() {\n        const { scrollTop } = viewport;\n\n        const old_start = start;\n\n        for (let v = 0; v < rows.length; v += 1) {\n            height_map[start + v] = itemHeight || rows[v].offsetHeight;\n        }\n\n        let i = 0;\n        let y = 0;\n\n        while (i < items.length) {\n            const row_height = height_map[i] || average_height;\n            if (y + row_height > scrollTop) {\n                start = i;\n                top = y;\n\n                break;\n            }\n\n            y += row_height;\n            i += 1;\n        }\n\n        while (i < items.length) {\n            y += height_map[i] || average_height;\n            i += 1;\n\n            if (y > scrollTop + viewport_height) break;\n        }\n\n        end = i;\n\n        const remaining = items.length - end;\n        average_height = y / end;\n\n        while (i < items.length) height_map[i++] = average_height;\n        bottom = remaining * average_height;\n\n        if (start < old_start) {\n            await tick();\n\n            let expected_height = 0;\n            let actual_height = 0;\n\n            for (let i = start; i < old_start; i += 1) {\n                if (rows[i - start]) {\n                    expected_height += height_map[i];\n                    actual_height += itemHeight || rows[i - start].offsetHeight;\n                }\n            }\n\n            const d = actual_height - expected_height;\n            viewport.scrollTo(0, scrollTop + d);\n        }\n    }\n\n    onMount(() => {\n        rows = contents.getElementsByTagName('svelte-virtual-list-row');\n        mounted = true;\n    });\n</script>\n\n<style>\n    svelte-virtual-list-viewport {\n        position: relative;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n        display: block;\n    }\n\n    svelte-virtual-list-contents,\n    svelte-virtual-list-row {\n        display: block;\n    }\n\n    svelte-virtual-list-row {\n        overflow: hidden;\n    }\n</style>\n\n<svelte-virtual-list-viewport\n    bind:this={viewport}\n    bind:offsetHeight={viewport_height}\n    on:scroll={handle_scroll}\n    style=\"height: {height};\">\n    <svelte-virtual-list-contents\n        bind:this={contents}\n        style=\"padding-top: {top}px; padding-bottom: {bottom}px;\">\n        {#each visible as row (row.index)}\n            <svelte-virtual-list-row>\n                <slot item={row.data} i={row.index} {hoverItemIndex}>Missing template</slot>\n            </svelte-virtual-list-row>\n        {/each}\n    </svelte-virtual-list-contents>\n</svelte-virtual-list-viewport>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { Router, Route } from \"svelte-navigator\";\n  import Overview from \"./routes/Overview.svelte\";\n  import About from \"./routes/About.svelte\";\n  import YourReport from \"./components/YourReport.svelte\";\n  import Report from \"./routes/Report.svelte\";\n  import Acknowledgements from \"./routes/Acknowledgements.svelte\";\n  import Glossary from \"./routes/Glossary.svelte\";\n  import Chapter from \"./components/Chapter.svelte\";\n  import Nav from \"./components/Nav.svelte\";\n  import NavItem from \"./components/NavItem.svelte\";\n  import { currentPage } from \"./stores/currentPage.js\";\n  import { showYourReport } from \"./stores/showYourReport.js\";\n  import { evaluation } from \"./stores/evaluation.js\";\n  import { getCatalog } from \"./utils/getCatalogs.js\";\n  import vars from \"../config/__buildEnv__.json\";\n  export let url = \"\";\n\n  const pagesWithYourReport = [\"Overview\", \"About\", \"Evaluation\"];\n\n  function needsYourReport(pageName) {\n    return pagesWithYourReport.indexOf(pageName) > -1;\n  }\n\n  onMount(() => {\n    window.addEventListener(\"input\", setInteracted);\n  });\n\n  function setInteracted(e) {\n    if (e.target.type != \"file\") {\n      window.removeEventListener(\"input\", setInteracted);\n       //window.onbeforeunload = closeEditorWarning;\n    }\n  }\n\n  function closeEditorWarning() {\n    return 'Are you sure?';\n  }\n  $: catalog = getCatalog($evaluation.catalog);\n</script>\n\n<style>\n  .app-content {\n    -ms-grid-column: 2;\n    -ms-grid-column-span: 6;\n    grid-column: 2 / span 6;\n    -ms-grid-row: 2;\n    -ms-grid-row-span: 2;\n    grid-row-start: 2;\n  }\n  .app-content--wide {\n    -ms-grid-column-span: 8;\n    grid-column: 2 / span 8;\n  }\n</style>\n\n<Router {url} basepath={vars.pathPrefix}>\n  <Nav>\n    <NavItem to=\"/\">Overview</NavItem>\n    <NavItem to=\"/about\">About</NavItem>\n    {#each catalog.chapters as chapter}\n      <NavItem to=\"chapter/{chapter.id}\">\n        {chapter.short_label}\n        <span class=\"visuallyhidden\">: {chapter.label}</span>\n      </NavItem>\n    {/each}\n    <NavItem to=\"/report\">Report</NavItem>\n    <NavItem to=\"/glossary\">Glossary</NavItem>\n    <NavItem to=\"/acknowledgements\">Acknowledgements</NavItem>\n  </Nav>\n  <section\n    id=\"content\"\n    class=\"app-content\"\n    class:app-content--wide={!needsYourReport($currentPage) || !$showYourReport}\n    aria-label=\"Main content\">\n    <Route path=\"/\">\n      <Overview />\n    </Route>\n    <Route path=\"/about\">\n      <About />\n    </Route>\n    <Route path=\"/chapter/:chapterId\" let:params>\n      <Chapter chapterId={params.chapterId} />\n    </Route>\n    <Route path=\"/report\">\n      <Report />\n    </Route>\n    <Route path=\"/acknowledgements\">\n      <Acknowledgements />\n    </Route>\n    <Route path=\"/glossary\">\n      <Glossary />\n    </Route>\n  </section>\n  {#if needsYourReport($currentPage)}\n    <YourReport />\n  {/if}\n</Router>\n",
    "<!--\n * @component\n * ListInput\n * A customizable forminput that receives\n * a value as array with either a string or an object.\n * a format of how to add a list item which is\n * an array of objects containing:\n * - required label\n * - required type; text | textarea | select | checkbox(group)\n * - optional helptext\n * - optional ...any; required props to pass on to specific formcomponents\n *\n * -->\n\n <div class=\"AddOther__container\">\n  <div\n    class=\"AddOther__Inputs\"\n    bind:this=\"{otherInputsContainer}\"\n    on:keydown=\"{handleAddKeydown}\"\n  >\n    <slot />\n  </div>\n  <button class=\"button button-secondary\" on:click={handleAddClick}>{label}</button>\n</div>\n\n<style>\n  :global(.AddOther__Inputs > *:not(:last-child)) {\n    margin: 0 0 1em;\n  }\n  :global(.AddOther__Inputs > *:last-child) {\n    margin-bottom: 0;\n  }\n</style>\n\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  export let label = 'Add';\n\n  const dispatch = createEventDispatcher();\n\n  let otherInputsContainer;\n  let otherInputs;\n\n  onMount(() => {\n    otherInputs = Array.from(\n      otherInputsContainer.querySelectorAll('input, select, textarea')\n    );\n  });\n\n  function handleAddKeydown(event) {\n    if (event.key.toLowerCase() === 'enter') {\n      event.preventDefault();\n\n      dispatchAdd();\n    }\n  }\n\n  function handleAddClick(event) {\n    event.preventDefault();\n    dispatchAdd();\n  }\n\n  function dispatchAdd() {\n    const detail = otherInputs.map((input) => {\n      return input.value;\n    });\n\n    if (otherInputs.length > 0) {\n      // Clear fields\n      otherInputs.forEach((input) => {\n        input.value = '';\n      });\n\n      otherInputs[0].focus();\n    }\n\n    dispatch('ADD', detail);\n  }\n</script>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  function handleClick() {\n    dispatch(\"toggle\");\n  }\n\n  export let expanded;\n</script>\n\n<style>\n  .button-showhide {\n    border-width: 1px;\n    border-color: var(--line-grey);\n    font-weight: normal;\n    background-color: transparent;\n    color: var(--off-black);\n    padding: 0 6px;\n    display: flex;\n    margin-left: auto;\n    margin-bottom: 2px;\n    margin-top: 2px;\n  }\n  .button-showhide:hover {\n    border-color: currentColor;\n  }\n  .button-showhide svg {\n    fill: transparent;\n  }\n  .button-showhide svg:first-child {\n    margin: 0 0.25em 0 -0.25em;\n  }\n  .button-showhide svg:last-child {\n    margin: 0 -0.25em 0 0.25em;\n  }\n</style>\n\n{#if expanded}\n  <button\n    type=\"button\"\n    class=\"button-secondary button-small button-showhide\"\n    on:click={handleClick}>\n    <span>\n      <slot />\n    </span>\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\">\n      <polyline points=\"9 18 15 12 9 6\" />\n    </svg>\n  </button>\n{:else}\n  <button\n    type=\"button\"\n    class=\"button-secondary button-small button-showhide\"\n    on:click={handleClick}>\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      stroke-width=\"2\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\">\n      <polyline points=\"15 18 9 12 15 6\" />\n    </svg>\n    <span>\n      <slot />\n    </span>\n  </button>\n{/if}\n",
    "<script>\n  import { evaluation } from \"../stores/evaluation.js\";\n  import HelpText from \"../components/HelpText.svelte\";\n  import HeaderWithAnchor from \"./HeaderWithAnchor.svelte\";\n  import { getCatalog } from \"../utils/getCatalogs.js\";\n\n  export let chapterId;\n  export let criteria;\n  export let component;\n  let catalog = getCatalog($evaluation.catalog);\n  let components = catalog.components;\n  let terms = catalog.terms;\n\n  $: currentComponent = components.find( ({ id }) => id === component);\n  $: currentEvaluationCriteria = ($evaluation['chapters'] && $evaluation['chapters'][chapterId]['criteria']) ? $evaluation['chapters'][chapterId]['criteria'].find( ({ num }) => num === criteria) : null;\n  $: currentEvaluationComponent = (currentEvaluationCriteria) ? currentEvaluationCriteria.components.find( ({ name }) => name === component) : null;\n  $: currentEvaluationCriteriaIndex = ($evaluation['chapters'] && $evaluation['chapters'][chapterId]['criteria']) ? $evaluation['chapters'][chapterId]['criteria'].findIndex( ({ num }) => num === criteria) : null;\n  $: currentEvaluationComponentIndex = (currentEvaluationCriteria) ? currentEvaluationCriteria.components.findIndex( ({ name }) => name === component) : null;\n  $: notesCharCount = ($evaluation['chapters'][chapterId]['criteria'][currentEvaluationCriteriaIndex]['components'][currentEvaluationComponentIndex]['adherence']['notes']) ? $evaluation['chapters'][chapterId]['criteria'][currentEvaluationCriteriaIndex]['components'][currentEvaluationComponentIndex]['adherence']['notes'].length : 0;\n  $: disabled = ($evaluation['chapters'][chapterId]['disabled']) ? 'disabled' : '';\n\n  function showNotesMessage(e) {\n    const messageBox = document.getElementById(`evaluation-${criteria}-${component}-notes-message`);\n    if (notesCharCount > 50) {\n      messageBox.innerHTML = \"<span class='notes-good'>Good&nbsp;</span>\";\n    } else if (notesCharCount > 1) {\n      messageBox.innerHTML = \"<span class='notes-need-more'>Longer description may be helpful&nbsp;</span>\";\n    } else {\n      messageBox.innerHTML = \"\";\n    }\n  }\n</script>\n\n<style>\n  select {\n    display: block;\n  }\n  .notes-message {\n    font-style: italic;\n  }\n  .notes-message > :global(.notes-good) {\n    color: green;\n  }\n  .notes-message > :global(.notes-good::after) {\n    content: '\\2713';\n    display: inline-block;\n    padding: 0 6px 0 0;\n  }\n  /* Color .text-accent-warm-darker from USWDS */\n  .notes-message > :global(.notes-need-more) {\n    color: #775540;\n  }\n  .notes-message > :global(.notes-need-more::after) {\n    content: '\\2192';\n    display: inline-block;\n    padding: 0 6px 0 0;\n  }\n</style>\n\n{#if currentComponent.label }\n  <HeaderWithAnchor id=\"{criteria}-{component}\" level=3>{currentComponent.label}</HeaderWithAnchor>\n{:else}\n  <br/><br/>\n{/if}\n\n{#if currentEvaluationCriteria }\n  {#if currentEvaluationComponent }\n    <div class=\"field\">\n      <label for=\"evaluation-{criteria}-{component}-level\">\n        Level\n        <span class=\"visuallyhidden\">for {criteria} {component}</span>\n      </label>\n      <select\n        id=\"evaluation-{criteria}-{component}-level\"\n        name=\"evaluation-{criteria}-{component}-level\"\n        bind:value={$evaluation['chapters'][chapterId]['criteria'][currentEvaluationCriteriaIndex]['components'][currentEvaluationComponentIndex]['adherence']['level']}\n        on:blur={() => {\n          evaluation.updateCache($evaluation);\n        }}\n        {disabled}\n        >\n        <option name=\"option-evaluation-{criteria}-{component}-level-none\" value=\"\">- Select -</option>\n        {#each terms as term}\n          <option name=\"option-evaluation-{criteria}-{component}-level-{term.id}\" value={term.id}>{term.label}</option>\n        {/each}\n      </select>\n      <HelpText type=\"components\" field=\"level\" />\n    </div>\n\n    <div class=\"field\">\n      <label for=\"evaluation-{criteria}-{component}-notes\">Remarks and Explanations</label>\n      <div id=\"evaluation-{criteria}-{component}-notes-message\" class=\"notes-message\" aria-live=\"polite\"></div>\n      <textarea\n        bind:value={$evaluation['chapters'][chapterId]['criteria'][currentEvaluationCriteriaIndex]['components'][currentEvaluationComponentIndex]['adherence']['notes']}\n        id=\"evaluation-{criteria}-{component}-notes\"\n        on:change={() => evaluation.updateCache($evaluation)}\n        on:keyup={showNotesMessage}\n        aria-describedby=\"evaluation-{criteria}-{component}-notes-message\" {disabled}/>\n      <HelpText type=\"components\" field=\"notes\" />\n    </div>\n  {:else}\n    <p>Could not find component '{component}' for critera '{criteria}' in '{chapterId}'.</p>\n  {/if}\n{:else}\n  <p>Could not find component '{component}' for critera '{criteria}' in '{chapterId}'.</p>\n{/if}\n",
    "<script>\n  import HeaderWithAnchor from \"./HeaderWithAnchor.svelte\";\n  import { Link } from \"svelte-navigator\";\n  import Component from \"./Component.svelte\";\n  import LinkToGuidance from \"./LinkToGuidance.svelte\";\n  export let chapterId;\n  export let chapterLink;\n  export let id;\n  export let alt_id;\n  export let handle;\n  export let components = [];\n  import { evaluation } from \"../stores/evaluation.js\";\n\n  $: linkToImplementing = `${chapterLink}#${alt_id}`;\n  $: disabled = ($evaluation['chapters'][chapterId]['disabled']) ? 'disabled' : '';\n</script>\n\n<style>\n  .criteria {\n    margin-bottom: 2em;\n  }\n  .observation__meta {\n    margin-left: auto;\n    font-size: smaller;\n    align-self: baseline;\n    float: right;\n  }\n</style>\n\n<div {id} class=\"criteria\">\n  <details>\n    <summary>\n      <HeaderWithAnchor id=\"{id}\" level=2>{id}: {handle}</HeaderWithAnchor>\n    </summary>\n    {#if !disabled}\n      <span class=\"observation__meta\">\n        <Link to={`/report#${alt_id}-editor`}>\n          View in Report\n        </Link>\n      </span>\n    {/if}\n    <LinkToGuidance href={linkToImplementing}>Implementing {id}: {handle}</LinkToGuidance>\n    {#if components}\n      {#each components as c}\n        <Component chapterId={chapterId} criteria={id} component={c} />\n      {/each}\n    {/if}\n  </details>\n</div>\n",
    "<script>\n  import vars from \"../../config/__buildEnv__.json\";\n\n  export let id;\n  export let download = false;\n\n  const extraId = download ? \"-download\" : \"-editor\";\n</script>\n\n<style>\n  dt {\n    position: relative;\n  }\n  dt a.header-anchor {\n    position: absolute;\n    left: -2rem;\n  }\n  dt a.header-anchor:hover svg,\n  dt a.header-anchor:focus svg,\n  dt a.header-anchor:focus-within svg {\n    fill: #0000EE;\n    opacity: 1;\n  }\n  dt a.header-anchor svg {\n    width: 24px;\n    height: 24px;\n    opacity: .3;\n  }\n  @media all and (max-width: 63.99em) {\n    dt a.header-anchor {\n      position:relative;\n      opacity: 1;\n      left: 0;\n      vertical-align: top\n    }\n  }\n  a.header-anchor {\n    opacity: 0.4;\n    font-size: small;\n    text-decoration: none;\n    position: relative;\n    left: 20px;\n    -webkit-transition: opacity 1s, font-size 1s;\n    -moz-transition: opacity 1s, font-size 1s;\n    -o-transition: opacity 1s, font-size 1s;\n    transition: opacity 1s, font-size 1s;\n  }\n  a.header-anchor:focus,a.header-anchor:hover {\n    text-decoration: underline;\n    font-size: large;\n    opacity: 1\n  }\n</style>\n\n<dt id=\"{id}{extraId}\">\n  <slot />\n  <a href=\"#{id}{extraId}\" class=\"header-anchor\" aria-labelledby=\"{id}{extraId}\">\n    <span class=\"anchor-icon\" aria-hidden=\"true\">\n      <svg\n        focusable=\"false\"\n        aria-hidden=\"true\"\n        class=\"icon-link\">\n        <use href={`${vars.pathPrefix}/images/icons.svg#link`} />\n      </svg>\n    </span>\n    <span class=\"visuallyhidden\">Anchor link</span>\n  </a>\n</dt>\n",
    "<style>\n  h1:focus {\n    outline: none; /* Rationale: this element gets focused on route to improve navigation for screen reader users; assuming a focus outline could confuse some users, and that this element is not a \"keyboard operable user interface\" (as in https://www.w3.org/WAI/WCAG21/quickref/#focus-visible), it requires no visible focus  */\n  }\n</style>\n\n<h1>\n  <slot />\n</h1>\n",
    "<script>\n  export let id;\n  export let level;\n  export let download = false;\n\n  const extraId = download ? \"-download\" : \"-editor\";\n</script>\n\n<style>\n  h2,\n  h3 {\n    position: relative;\n  }\n  h2 a.header-anchor,\n  h3 a.header-anchor {\n    position: absolute;\n    left: -2rem;\n  }\n  h2 a.header-anchor:hover svg,\n  h2 a.header-anchor:focus svg,\n  h2 a.header-anchor:focus-within svg,\n  h3 a.header-anchor:hover svg,\n  h3 a.header-anchor:focus svg,\n  h3 a.header-anchor:focus-within svg {\n    fill: #0000EE;\n    opacity: 1;\n  }\n  h2 a.header-anchor svg,\n  h3 a.header-anchor svg {\n    width: 28px;\n    height: 28px;\n    opacity: .3;\n  }\n  @media all and (max-width: 63.99em) {\n    h2 a.header-anchor,\n    h3 a.header-anchor {\n      position:relative;\n      opacity: 1;\n      left: 0;\n      vertical-align: top;\n    }\n  }\n  a.header-anchor {\n    opacity: 0.4;\n    font-size: small;\n    text-decoration: none;\n    position: relative;\n    left: 20px;\n    -webkit-transition: opacity 1s, font-size 1s;\n    -moz-transition: opacity 1s, font-size 1s;\n    -o-transition: opacity 1s, font-size 1s;\n    transition: opacity 1s, font-size 1s;\n  }\n  a.header-anchor:focus,a.header-anchor:hover {\n    text-decoration: underline;\n    font-size: large;\n    opacity: 1;\n  }\n  summary>h3:first-child:before {\n    line-height: 1.2;\n  }\n</style>\n\n{#if level == 2}\n  <h2 id=\"{id}{extraId}\">\n    <slot />\n    <a href=\"#{id}{extraId}\" class=\"header-anchor\" aria-labelledby=\"{id}{extraId}\">\n      <span class=\"anchor-icon\" aria-hidden=\"true\">\n        <svg\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          class=\"icon-link\">\n            <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n        </svg>\n      </span>\n      <span class=\"visuallyhidden\">Anchor link</span>\n    </a>\n  </h2>\n{/if}\n\n{#if level == 3}\n  <h3 id=\"{id}{extraId}\">\n    <slot />\n    <a href=\"#{id}{extraId}\" class=\"header-anchor\" aria-labelledby=\"{id}{extraId}\">\n      <span class=\"anchor-icon\" aria-hidden=\"true\">\n        <svg\n          focusable=\"false\"\n          aria-hidden=\"true\"\n          class=\"icon-link\">\n            <path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n        </svg>\n      </span>\n      <span class=\"visuallyhidden\">Anchor link</span>\n    </a>\n  </h3>\n{/if}\n",
    "<script>\n  import helpText from \"../data/helpText.yaml\";\n\n  export let type;\n  export let field;\n</script>\n\n<style>\n  .help-text {\n    color: #868686;\n    font-style: italic;\n    font-size: 0.85em;\n  }\n</style>\n\n{#if helpText[type] &&\n     helpText[type][field]}\n  <div class=\"help-text\">\n    {helpText[type][field]}\n  </div>\n{/if}\n",
    "<script>\n  export let href;\n</script>\n\n<style>\n  .link-to-guidance {\n    border-width: 1px;\n    font-weight: normal;\n    color: var(--dk-grey);\n    border-color: var(--line-grey);\n    background-color: var(--pure-white);\n    vertical-align: middle;\n    margin: 2px 0;\n  }\n  .link-to-guidance:hover,\n  .link-to-guidance:focus {\n    color: var(--off-black);\n    background-color: var(--off-white);\n  }\n  .link-to-guidance svg {\n    margin-right: 0.25em;\n  }\n  .link-to-guidance:after {\n    margin-top: 0;\n  }\n</style>\n\n<a\n  {href}\n  class=\"link-to-guidance button button-small button-secondary\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\">\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"14\"\n    height=\"14\"\n    viewBox=\"0 0 16 16\">\n    <path\n      fill=\"currentColor\"\n      d=\"M7 4.75c0-0.412 0.338-0.75 0.75-0.75h0.5c0.412 0 0.75 0.338 0.75\n      0.75v0.5c0 0.412-0.338 0.75-0.75 0.75h-0.5c-0.412\n      0-0.75-0.338-0.75-0.75v-0.5z\" />\n    <path fill=\"currentColor\" d=\"M10 12h-4v-1h1v-3h-1v-1h3v4h1z\" />\n    <path\n      fill=\"currentColor\"\n      d=\"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8 8-3.582 8-8-3.582-8-8-8zM8\n      14.5c-3.59 0-6.5-2.91-6.5-6.5s2.91-6.5 6.5-6.5 6.5 2.91 6.5 6.5-2.91\n      6.5-6.5 6.5z\" />\n  </svg>\n  <span>\n    <slot />\n  </span> <span class=\"visuallyhidden\">(opens in a new window or tab)</span>\n</a>\n",
    "<style>\n\t.nav {\n\t-ms-grid-column: 2;\n\t-ms-grid-column-span: 8;\n\tgrid-column: 2 / span 8;\n\t-ms-grid-row: 1;\n\t-ms-grid-row-span: 1;\n\tgrid-row: 1;\n\toverflow: auto;\n\tmargin: -32px 0 40px;\n\tbackground-color: #d0e1f1;\n\tbackground-color: var(--cloudy-subtle);\n\t}\n\t.nav ul {\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin: 0;\n\tpadding: 0;\n\t}\n</style>\n\n<nav class=\"nav\" aria-label=\"Steps\">\n  <ul>\n    <slot />\n  </ul>\n</nav>\n",
    "<script>\n  import { Link } from \"svelte-navigator\";\n  import vars from \"../../config/__buildEnv__.json\";\n\n  export let to = \"\";\n  export let direction = \"\";\n</script>\n\n<style>\n  .pager--item-text-direction {\n    text-transform: capitalize;\n  }\n</style>\n\n<li class={`pager--item ${direction}`}>\n  <Link {to}>\n    {#if direction === 'previous'}\n      <svg\n        focusable=\"false\"\n        aria-hidden=\"true\"\n        class=\"icon-arrow-right pager--item-icon\">\n        <use href={`${vars.pathPrefix}/images/icons.svg#icon-arrow-left`} />\n      </svg>\n    {:else if direction === 'next'}\n      <svg\n        focusable=\"false\"\n        aria-hidden=\"true\"\n        class=\"icon-arrow-right pager--item-icon\">\n        <use href={`${vars.pathPrefix}/images/icons.svg#icon-arrow-right`} />\n      </svg>\n    {/if}\n    <span class=\"pager--item-text\">\n      <span class=\"pager--item-text-direction\">\n        {`${direction.toLowerCase()}:`}\n      </span>\n      <span class=\"pager--item-text-target\">\n        <slot />\n      </span>\n    </span>\n  </Link>\n</li>\n",
    "<script>\n  export let percentage = 0;\n</script>\n\n<style>\n  .progress-bar {\n    height: 0.25em;\n    width: 100%;\n    background-color: var(--cloudy);\n    position: relative;\n  }\n  .progress-bar__progress {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    background: #1e6ad6;\n    transition: width 0.2s;\n  }\n</style>\n\n<div class=\"progress-bar\">\n  <span class=\"progress-bar__progress\" style={`width: ${percentage}%`}>\n    <span class=\"visuallyhidden\">{percentage} %</span>\n  </span>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  import { evaluation } from \"../stores/evaluation.js\";\n  import HelpText from \"../components/HelpText.svelte\";\n\n  export let id;\n  export let count;\n\n  const dispatch = createEventDispatcher();\n\n  function dispatchDelete() {\n    dispatch('DELETE', id);\n  }\n</script>\n\n<style>\n  .Related__Control--delete {\n    font-size: 1em;;\n    float: right;\n    margin-left: 1em;\n    margin-top: .25em;\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    color: currentColor;\n  }\n  .Related {\n    background: var(--trans-line-grey);\n    padding: 1em;\n  }\n  :global(.Related .Related__Contents .related-input .Field) {\n    margin-bottom: .5em;\n  }\n  :global(.Related legend) {\n    font-size: 1em;\n    padding: 0;\n    margin-bottom: .25em;\n  }\n  :global(.Related fieldset) {\n    margin-bottom: 0;\n  }\n  @media (min-width: 40em) {\n    .related-input {\n      display: grid;\n      grid-template-columns: 1fr auto;\n      gap: 1em;\n    }\n  }\n</style>\n\n<div class=\"Related\">\n  <div class=\"Related__Contents\">\n    <button\n    type=\"button\"\n    class=\"Related__Control--delete\"\n    on:click=\"{dispatchDelete}\"\n    >\n      <svg\n        focusable=\"false\"\n        aria-hidden=\"true\"\n        role=\"presentation\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\">\n          <polyline points=\"3 6 5 6 21 6\"/>\n          <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n          <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\" stroke=\"#ffffff\"/>\n          <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\" stroke=\"#ffffff\" />\n      </svg>\n      <span class=\"visuallyhidden\">Delete Related OpenACR</span>\n    </button>\n    <fieldset>\n      <legend>Related OpenACR {count}</legend>\n      <div class=\"related-input\">\n        <div class=\"field\">\n          <label for=\"evaluation-related-openacrs-{count}-url\">URL</label>\n          <input\n            type=\"url\"\n            bind:value={$evaluation['related_openacrs'][id]['url']}\n            id=\"evaluation-related-openacrs-{count}-url\"\n            on:blur={() => evaluation.updateCache($evaluation)} />\n          <HelpText type=\"related_openacrs\" field=\"url\" />\n        </div>\n        <div class=\"field\">\n          <label for=\"evaluation-related-openacrs-{count}-type\">Type</label>\n          <select\n            id=\"evaluation-related-openacrs-{count}-type\"\n            name=\"evaluation-related-openacrs-{count}-type\"\n            bind:value={$evaluation['related_openacrs'][id]['type']}\n            on:blur={() => {\n              evaluation.updateCache($evaluation);\n            }}>\n              <option name=\"option-evaluation-related-openacrs-type-primary\" value=\"primary\">Primary</option>\n              <option name=\"option-evaluation-related-openacrs-type-secondary\" value=\"secondary\">Secondary</option>\n          </select>\n          <HelpText type=\"related_openacrs\" field=\"type\" />\n        </div>\n      </div>\n    </fieldset>\n  </div>\n</div>\n",
    "<script>\n  import YourReportProgress from \"./YourReportProgress.svelte\";\n  import ProgressBar from \"./ProgressBar.svelte\";\n  import ButtonShowHide from \"./ButtonShowHide.svelte\";\n  import ReportNumbers from \"./report/ReportNumbers.svelte\";\n  import { navigate } from \"svelte-navigator\";\n  import { evaluation } from \"../stores/evaluation.js\";\n  import { currentPage } from \"../stores/currentPage.js\";\n  import { showYourReport } from \"../stores/showYourReport.js\";\n  import { importEvaluation } from \"../utils/importEvaluation.js\";\n  import { getEvaluatedChapterCriteriaComponents, getChapterCriteriaComponents, getProgressPerChapter } from \"../utils/getEvaluatedItems.js\";\n  import { getCatalog } from \"../utils/getCatalogs.js\";\n  import vars from \"../../config/__buildEnv__.json\";\n\n  let fresh, box;\n\n  function startNew() {\n    navigate(`${vars.pathPrefix}/about`, { replace: false });\n    fresh = false;\n  }\n\n  function toOverview() {\n    navigate(`${vars.pathPrefix}/report`, { replace: false });\n  }\n\n  function clear() {\n    //window.onbeforeunload = null;\n    if (\n      window.confirm(\n        \"This will clear the current OpenACR and start a new one. Are you sure that's what you'd like to do?\"\n      )\n    ) {\n      evaluation.clearCache();\n      navigate(`${vars.pathPrefix}/`, { replace: true });\n    }\n  }\n\n  function toggleYourReport() {\n    showYourReport.update(v => (v = !v));\n    box.focus();\n  }\n\n  evaluation.subscribe(value => {\n    fresh = evaluation.isFresh();\n  });\n\n  $: fresh = evaluation.isFresh();\n  $: nameProvided =\n    $evaluation[\"product\"] &&\n    $evaluation[\"product\"][\"name\"];\n  $: progressPerChapter = getProgressPerChapter($evaluation);\n  $: evaluatedItems = getEvaluatedChapterCriteriaComponents($evaluation);\n  $: totalCriteria = getChapterCriteriaComponents($evaluation);\n  $: catalog = getCatalog($evaluation.catalog);\n</script>\n\n<style>\n  .your-report {\n    -ms-grid-column: 8;\n    -ms-grid-column-span: 1;\n    grid-column: 8 / span 2;\n    -ms-grid-row: 2;\n    grid-row-start: 2;\n    align-self: start;\n    justify-self: end;\n    padding: 1em 0;\n    border: 1px solid transparent;\n    outline: none;\n  }\n  .your-report--expanded {\n    background: var(--footer-grey);\n    box-shadow: 0px 2px 8px -7px #000;\n    border-color: var(--line-grey);\n    margin-bottom: 2em;\n    padding: 1em;\n  }\n  @media (min-width: 60em) {\n    .your-report--expanded {\n      position: sticky;\n      top: 4em;\n    }\n  }\n\n  .your-report__heading {\n    font-weight: bold;\n    font-size: 1em;\n    margin: 0;\n    display: flex;\n    align-items: center;\n  }\n  .your-report__heading-pre {\n    display: block;\n    font-weight: normal;\n    color: var(--dk-blue);\n  }\n  .your-report__import:focus + .your-report__import-label {\n    outline-offset: 2px;\n    outline: 2px solid transparent;\n    transition: outline-offset 0.2s linear;\n    border-color: var(--w3c-blue);\n    outline-color: var(--w3c-blue);\n  }\n  .your-report__progress-by-principle {\n    columns: 1;\n    column-gap: 1.5em;\n    margin: 2.25em 0 1.75em 0;\n    padding: 0;\n  }\n  :global(.your-report__description) {\n    margin-bottom: 0.5em;\n  }\n  button,\n  input {\n    margin-bottom: 4px;\n  }\n</style>\n\n<div\n  class=\"your-report\"\n  class:your-report--expanded={$showYourReport === true}\n  bind:this={box}\n  tabindex=\"-1\"\n  aria-live=\"polite\">\n  {#if $showYourReport === true}\n    {#if fresh && $currentPage === 'Overview'}\n      <h2 class=\"your-report__heading\">\n        Your report\n        <ButtonShowHide expanded={true} on:toggle={toggleYourReport}>\n          Hide\n        </ButtonShowHide>\n      </h2>\n      <p>No report started.</p>\n      <button class=\"button\" on:click={startNew}>Start new report</button>\n      <input\n        type=\"file\"\n        id=\"import-evaluation\"\n        on:change={importEvaluation}\n        class=\"visuallyhidden your-report__import\"\n        accept=\"application/yaml\" />\n      <label\n        for=\"import-evaluation\"\n        class=\"button button-secondary your-report__import-label\">\n        Open report\n      </label>\n    {:else}\n      <h2 class=\"your-report__heading\">\n        {#if nameProvided}\n          <div>\n            <small class=\"your-report__heading-pre\">Report for</small>\n            {$evaluation['product']['name']}\n          </div>\n        {:else}Your Report{/if}\n        <ButtonShowHide expanded={true} on:toggle={toggleYourReport}>\n          Hide\n        </ButtonShowHide>\n      </h2>\n      <ReportNumbers className=\"your-report__description\" />\n      <ProgressBar percentage={100 / (totalCriteria.length / evaluatedItems.length)} />\n      <ul class=\"your-report__progress-by-principle\">\n        {#each catalog.chapters as chapter}\n          {#if !$evaluation.chapters[chapter.id].disabled}\n            <YourReportProgress\n              {chapter}\n              done={progressPerChapter[chapter.id]['evaluated']}\n              total={progressPerChapter[chapter.id]['total']} />\n          {/if}\n        {/each}\n      </ul>\n      <button class=\"button\" on:click={toOverview}>View Report</button>\n      {#if $currentPage === 'Overview'}\n        <button type=\"button\" class=\"button button-secondary\" on:click={clear}>\n          New Report\n        </button>\n      {/if}\n    {/if}\n  {:else}\n    <ButtonShowHide expanded={false} on:toggle={toggleYourReport}>\n      Show \"Your Report\"\n    </ButtonShowHide>\n  {/if}\n  </div>\n",
    "<script>\n  import ProgressBar from \"./ProgressBar.svelte\";\n  import vars from \"../../config/__buildEnv__.json\";\n\n  export let chapter;\n  export let done;\n  export let total;\n\n  $: percentage = 100 / (total / done);\n</script>\n\n<style>\n  .progress {\n    margin-bottom: 1em;\n    list-style: none;\n  }\n  .principle__name {\n    color: var(--off-black);\n    font-weight: bold;\n    text-decoration: none;\n  }\n  .principle__name:hover span {\n    text-decoration: underline;\n  }\n  .progress__principle {\n    display: flex;\n    align-items: center;\n    margin-bottom: 0.125em;\n  }\n  .progress__part {\n    font-size: 0.65em;\n    margin-left: auto;\n  }\n</style>\n\n<li class=\"progress\">\n  <div class=\"progress__principle\">\n    <a href={`${vars.pathPrefix}/chapter/${chapter.id}`} class=\"principle__name\">\n      <span>{chapter.short_label}</span>\n    </a>\n    <span class=\"progress__part\">{done} of {total}</span>\n  </div>\n  <ProgressBar {percentage} />\n</li>\n",
    "<script>\n  import { evaluation } from \"../../stores/evaluation.js\";\n  import { getCatalogChapter } from \"../../utils/getCatalogItems.js\";\n  import ReportChapterTableResult from \"./ReportChapterTableResult.svelte\";\n  import HeaderWithAnchor from \"../HeaderWithAnchor.svelte\";\n  import { sanitizeMarkdown } from \"../../utils/sanitizeMarkdown.js\";\n\n  export let standard;\n  export let chapterId;\n  export let download = false;\n  let catalogName = $evaluation.catalog;\n\n  $: chapter = getCatalogChapter(catalogName, chapterId);\n</script>\n\n<style>\n  table {\n    width: 100%;\n  }\n  tr:target {\n    outline: 2px solid var(--gold);\n  }\n  thead {\n    position: sticky;\n    top: 3em;\n    z-index: 1;\n  }\n  thead th {\n    position: absolute;\n    left: -9999em;\n    top: -9999em;\n  }\n  @media (min-width: 60em) {\n    thead th {\n      position: static;\n    }\n  }\n</style>\n\n<HeaderWithAnchor id={chapterId} level=3 {download}>{chapter.label}</HeaderWithAnchor>\n\n{#if $evaluation['chapters'][chapterId]['notes']}\n  Notes: {@html sanitizeMarkdown($evaluation['chapters'][chapterId]['notes'])}\n{/if}\n\n{#if $evaluation['chapters'][chapterId]['criteria'] && !$evaluation['chapters'][chapterId]['disabled'] }\n  <table>\n    <thead>\n    <tr>\n      <th>Criteria</th>\n      <th>Conformance Level</th>\n      <th>Remarks and Explanations</th>\n    </tr>\n    </thead>\n    <tbody>\n      {#each $evaluation['chapters'][chapterId]['criteria'] as criteria}\n        <ReportChapterTableResult {catalogName} {standard} {chapterId} {criteria} {download} />\n      {/each}\n    </tbody>\n  </table>\n{/if}\n",
    "<script>\n  import { catalogChapterCriteria, catalogComponentLabel, levelLabel } from \"../../utils/getCatalogItems.js\";\n  import { sanitizeMarkdown } from \"../../utils/sanitizeMarkdown.js\";\n\n  export let catalogName;\n  export let standard;\n  export let chapterId;\n  export let criteria;\n  export let download = false;\n\n  $: catalogCriteria = catalogChapterCriteria(catalogName, chapterId, criteria.num);\n  const extraId = download ? \"-download\" : \"-editor\";\n</script>\n\n<style>\n  .result-row {\n    margin-bottom: 1em;\n    border-bottom: 1px solid var(--cloudy);\n  }\n  .result-row:target {\n    outline: 2px solid var(--gold);\n  }\n  .result-row td {\n    display: block;\n    position: relative;\n    border-style: none;\n  }\n  @media (min-width: 60em) {\n    .result-row {\n      border-bottom: 0;\n    }\n    .result-row td {\n      display: table-cell;\n      border: 1px solid var(--cloudy);\n    }\n  }\n</style>\n\n{#if catalogCriteria }\n<tr class=\"result-row\" id=\"{catalogCriteria.alt_id}{extraId}\">\n  <td>\n    <a href=\"{standard.url}#{catalogCriteria.alt_id}\" target=\"_blank\">\n      {criteria.num} {catalogCriteria.handle} <span class=\"visuallyhidden\">(opens in a new window or tab)</span>\n    </a>\n  </td>\n  <td>\n    {#if criteria.components}\n      <ul>\n        {#each criteria.components as component}\n          {#if component.adherence.level}\n            <li>{@html catalogComponentLabel(catalogName, component.name, \"html\")}<p>{levelLabel(catalogName, component.adherence.level)}</p></li>\n          {/if}\n        {/each}\n      </ul>\n    {/if}\n  </td>\n  <td>\n    {#if criteria.components}\n      <ul>\n        {#each criteria.components as component}\n        {#if component.adherence.notes}\n          <li>{@html catalogComponentLabel(catalogName, component.name, \"html\")}{@html sanitizeMarkdown(component.adherence.notes)}</li>\n          {/if}\n        {/each}\n      </ul>\n    {/if}\n  </td>\n</tr>\n{/if}\n",
    "<script>\n  import { evaluation } from \"../../stores/evaluation.js\";\n  import { validate } from \"../../utils/validate.js\";\n\n  const valid = validate($evaluation);\n</script>\n\n<style>\n  /* TODO remove after switching theme to use USWDS */\n  *+.usa-alert {\n    margin-top: 1rem;\n  }\n  .usa-alert {\n    font-size: 1.06rem;\n    line-height: 1.5;\n    background-color: #f0f0f0;\n    padding-bottom: 1rem;\n    padding-top: 1rem;\n    position: relative;\n    border-left: 0.5rem solid #adadad;\n  }\n  .usa-alert__heading {\n    font-size: 1.33rem;\n    line-height: .9;\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n  .usa-alert__body {\n    padding-left: 1.25rem;\n    padding-right: 1.25rem;\n  }\n  .usa-alert__text {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n  .usa-alert--error {\n    background-color: #f4e3db;\n    border-left-color: #d54309;\n    color: #1b1b1b;\n  }\n  .usa-alert--error:before {\n    background: 0 0;\n    background-color: #1b1b1b;\n    -webkit-mask: url(../images/error.svg) no-repeat center/contain;\n    width: 2rem;\n    content: \"\";\n    display: block;\n    height: 3.5rem;\n    left: 0.9166666667rem;\n    position: absolute;\n    top: 0;\n  }\n  .usa-alert--success {\n    background-color: #ecf3ec;\n    border-left-color: #00a91c;\n    color: #1b1b1b;\n  }\n  .usa-alert--success:before {\n    background: 0 0;\n    background-color: #1b1b1b;\n    -webkit-mask: url(../images/check_circle.svg) no-repeat center/contain;\n    width: 2rem;\n    content: \"\";\n    display: block;\n    height: 3.5rem;\n    left: 0.9166666667rem;\n    position: absolute;\n    top: 0;\n  }\n  .usa-alert--success .usa-alert__body,\n  .usa-alert--error .usa-alert__body {\n    padding-left: 3.8333333334rem;\n  }\n</style>\n\n{#if valid.result}\n  <div class=\"usa-alert usa-alert--success\">\n    <div class=\"usa-alert__body\">\n      <h4 class=\"usa-alert__heading\">Valid Report</h4>\n      <p class=\"usa-alert__text\">\n        Your report has passed validation\n      </p>\n    </div>\n  </div>\n{:else}\n  <div class=\"usa-alert usa-alert--error\" role=\"alert\">\n    <div class=\"usa-alert__body\">\n      <h4 class=\"usa-alert__heading\">Error</h4>\n      <p class=\"usa-alert__text\">\n        {@html valid.message}\n      </p>\n    </div>\n  </div>\n{/if}\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { useLocation } from \"svelte-navigator\";\n  import Header from \"../components/Header.svelte\";\n  import Pager from \"../components/Pager.svelte\";\n  import HelpText from \"../components/HelpText.svelte\";\n  import PagerLink from \"../components/PagerLink.svelte\";\n  import { evaluation } from \"../stores/evaluation.js\";\n  import { currentPage } from \"../stores/currentPage.js\";\n  import ChapterHelpText from \"../components/ChapterHelpText.svelte\";\n  import spdxLicenseList from \"spdx-license-list\";\n  import Select from 'svelte-select';\n  import helpText from \"../data/helpText.yaml\";\n  import Related from \"../components/Related.svelte\";\n  import AddOther from \"../components/AddOther.svelte\";\n  import HeaderWithAnchor from \"../components/HeaderWithAnchor.svelte\";\n  import ExpandCollapseAll from \"../components/ExpandCollapseAll.svelte\";\n  import { honourFragmentIdLinks } from \"../utils/honourFragmentIdLinks.js\";\n  import { reportFilename } from \"../utils/reportFilename.js\";\n  import { getCatalog, getListOfCatalogs } from \"../utils/getCatalogs.js\";\n  import { updateEvaluation } from \"../utils/updateEvaluation.js\";\n\n  const location = useLocation();\n  let catalog = getCatalog($evaluation.catalog);\n  let catalogChoices = getListOfCatalogs();\n  let selectedCatalog = $evaluation.catalog;\n\n  onMount(() => {\n    currentPage.update(currentPage => \"About\");\n\n    honourFragmentIdLinks($location);\n  });\n\n  let spdxLicenses = [];\n  for (const spdexLicenseListItem in spdxLicenseList) {\n    spdxLicenses.push({\n      value: spdexLicenseListItem,\n      label: `${spdxLicenseList[spdexLicenseListItem].name} (${spdexLicenseListItem})`\n    });\n  }\n  spdxLicenses.push({\n    value: 'Invalid',\n    label: 'Invalid License'\n  });\n  spdxLicenses.sort((a, b) => {\n    let la = a.label.toLowerCase(),\n        lb = b.label.toLowerCase();\n\n    if (la < lb) {\n        return -1;\n    }\n    if (la > lb) {\n        return 1;\n    }\n    return 0;\n  });\n\n  function handleLicenseSelect(e) {\n    $evaluation['license'] = e.detail.value;\n    evaluation.updateCache($evaluation);\n  }\n\n  function handleLicenseClear(e) {\n    $evaluation['license'] = \"\";\n    evaluation.updateCache($evaluation);\n  }\n\n  function handleRelatedAdd() {\n    const newRelatedOpenACR = {\n      url: \"\",\n      type: \"primary\"\n    };\n\n    $evaluation['related_openacrs'] = [...$evaluation['related_openacrs'], newRelatedOpenACR];\n    evaluation.updateCache($evaluation);\n  }\n\n  function handleRelatedDelete(e) {\n    if (window.confirm(\"Are you sure you would like to delete this related OpenACR?\")) {\n      const newValue = $evaluation['related_openacrs'];\n      newValue.splice(e.detail, 1);\n      $evaluation['related_openacrs'] = newValue;\n      evaluation.updateCache($evaluation);\n    }\n  }\n\n  function updateCatalog(e) {\n    selectedCatalog = e.target.value;\n  }\n\n  function confirmCatalogChange(e) {\n    if (\n      window.confirm(\n        \"Switching catalogs may remove entered data and notes from your ACR that are not part of the newly selected catalog.\\n\\nPlease download your report before switching catalogs to avoid losing information. Select Cancel to save before switching.\"\n      )\n    ) {\n      $evaluation['catalog'] = selectedCatalog;\n      updateEvaluation(selectedCatalog, $evaluation);\n    }\n  }\n\n  function resetCatalogChange() {\n    selectedCatalog = $evaluation['catalog'];\n  }\n\n  $: versionPrefix = reportFilename($evaluation, false);\n</script>\n\n<style>\n  #evaluation-version {\n    display: inline-block;\n    width: unset;\n  }\n  input[readonly]:focus,\n  input[readonly] {\n    background-color: lightgrey !important;\n  }\n</style>\n\n<svelte:head>\n  <title>About | OpenACR Editor | GSA</title>\n</svelte:head>\n\n<Header>About</Header>\n\n<ChapterHelpText\n  chapterId=\"about\"\n  />\n\n<ExpandCollapseAll />\n\n<details open>\n  <summary>\n    <HeaderWithAnchor id=\"select-catalog\" level=2>Select report type and catalog</HeaderWithAnchor>\n  </summary>\n  <p>{helpText[\"catalog\"][\"intro\"]}</p>\n  {#each catalogChoices as catalogChoice}\n    <div class=\"field\">\n      <label>\n        <input\n          type=\"radio\"\n          value={catalogChoice.catalog}\n          bind:group=\"{selectedCatalog}\"\n          id=\"evaluation-catalog-{catalogChoice.catalog}\"\n          on:change={updateCatalog} />\n\n        {catalogChoice.title}\n      </label>\n      <HelpText type=\"catalog\" field=\"{catalogChoice.catalog}\" />\n    </div>\n  {/each}\n\n  {#if $evaluation['catalog'] !== selectedCatalog }\n    <p><em>Select Switch Catalogs to save your new selection.</em></p>\n  {/if}\n  <button class=\"button\" on:click={confirmCatalogChange} disabled={$evaluation['catalog'] === selectedCatalog}>Switch Catalogs</button>\n  <button class=\"button\" on:click={resetCatalogChange} disabled={$evaluation['catalog'] === selectedCatalog}>Reset</button>\n</details>\n\n<details open>\n  <summary>\n    <HeaderWithAnchor id=\"product\" level=2>Product</HeaderWithAnchor>\n  </summary>\n\n  <div class=\"field\">\n    <label for=\"evaluation-product-name\">Name</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['product']['name']}\n      id=\"evaluation-product-name\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"product\" field=\"name\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-product-version\">Version</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['product']['version']}\n      id=\"evaluation-product-version\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"product\" field=\"version\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-product-description\">Description</label>\n    <textarea\n      bind:value={$evaluation['product']['description']}\n      id=\"evaluation-product-description\"\n      on:change={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"product\" field=\"description\" />\n  </div>\n</details>\n\n<details open>\n  <summary>\n    <HeaderWithAnchor id=\"author\" level=2>Author</HeaderWithAnchor>\n  </summary>\n\n  <div class=\"field\">\n    <label for=\"evaluation-author-name\">Name</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['author']['name']}\n      id=\"evaluation-author-name\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"author\" field=\"name\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-author-company\">Company Name</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['author']['company_name']}\n      id=\"evaluation-author-company\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"author\" field=\"company_name\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-author-address\">Address</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['author']['address']}\n      id=\"evaluation-author-address\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"author\" field=\"address\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-author-email\">Email</label>\n    <input\n      type=\"email\"\n      bind:value={$evaluation['author']['email']}\n      id=\"evaluation-author-email\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"author\" field=\"email\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-author-phone\">Phone</label>\n    <input\n      type=\"tel\"\n      bind:value={$evaluation['author']['phone']}\n      id=\"evaluation-author-phone\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"author\" field=\"phone\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-author-website\">Website (URL)</label>\n    <input\n      type=\"url\"\n      bind:value={$evaluation['author']['website']}\n      id=\"evaluation-author-website\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"author\" field=\"website\" />\n  </div>\n</details>\n\n<details open>\n  <summary>\n    <HeaderWithAnchor id=\"vendor\" level=2>Vendor</HeaderWithAnchor>\n  </summary>\n\n  <div class=\"field\">\n    <label for=\"evaluation-vendor-name\">Name</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['vendor']['name']}\n      id=\"evaluation-vendor-name\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"vendor\" field=\"name\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-vendor-company\">Company Name</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['vendor']['company_name']}\n      id=\"evaluation-vendor-company\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"vendor\" field=\"company_name\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-vendor-address\">Address</label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['vendor']['address']}\n      id=\"evaluation-vendor-address\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"vendor\" field=\"address\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-vendor-email\">Email</label>\n    <input\n      type=\"email\"\n      bind:value={$evaluation['vendor']['email']}\n      id=\"evaluation-vendor-email\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"vendor\" field=\"email\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-vendor-phone\">Phone</label>\n    <input\n      type=\"tel\"\n      bind:value={$evaluation['vendor']['phone']}\n      id=\"evaluation-vendor-phone\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"vendor\" field=\"phone\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-vendor-website\">Website (URL)</label>\n    <input\n      type=\"url\"\n      bind:value={$evaluation['vendor']['website']}\n      id=\"evaluation-vendor-website\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"vendor\" field=\"website\" />\n  </div>\n</details>\n\n<details open>\n  <summary>\n    <HeaderWithAnchor id=\"acr-report-details\" level=2>ACR Report Details</HeaderWithAnchor>\n  </summary>\n\n  <div class=\"field\">\n    <label for=\"evaluation-report-date\">\n      Report Date\n    </label>\n    <input\n      type=\"text\"\n      bind:value={$evaluation['report_date']}\n      id=\"evaluation-report-date\"\n      on:change={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"report\" field=\"report_date\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-last-modified-date\">\n      Last Modified Date\n    </label>\n    <input\n      type=\"text\"\n      readonly\n      value={$evaluation['last_modified_date']}\n      id=\"evaluation-last-modified-date\" />\n    <HelpText type=\"report\" field=\"last_modified_date\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-version\">\n      Version\n    </label>\n    <span class=\"version-prefix\">{versionPrefix}-</span>\n    <input\n      type=\"number\"\n      readonly\n      value={$evaluation['version']}\n      id=\"evaluation-version\" />\n    <HelpText type=\"report\" field=\"version\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-notes\">Notes</label>\n    <textarea\n      bind:value={$evaluation['notes']}\n      id=\"evaluation-notes\"\n      on:change={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"report\" field=\"notes\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-evaluation-methods-used\">Evaluation Methods Used</label>\n    <textarea\n      bind:value={$evaluation['evaluation_methods_used']}\n      id=\"evaluation-evaluation-methods-used\"\n      on:change={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"report\" field=\"evaluation_methods_used\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-legal-disclaimer\">Legal Disclaimer</label>\n    <textarea\n      bind:value={$evaluation['legal_disclaimer']}\n      id=\"evaluation-legal-disclaimer\"\n      on:change={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"report\" field=\"legal_disclaimer\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-repository\">Repository (URL)</label>\n    <input\n      type=\"url\"\n      bind:value={$evaluation['repository']}\n      id=\"evaluation-repository\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"report\" field=\"repository\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-feedback\">Feedback (URL)</label>\n    <input\n      type=\"url\"\n      bind:value={$evaluation['feedback']}\n      id=\"evaluation-feedback\"\n      on:blur={() => evaluation.updateCache($evaluation)} />\n    <HelpText type=\"report\" field=\"feedback\" />\n  </div>\n\n  <div class=\"field\">\n    <label for=\"evaluation-license\">License</label>\n    <Select id=\"evaluation-license\" inputStyles=\"border: 1px solid var(--grey);\" items={spdxLicenses} value={$evaluation['license']} on:select={handleLicenseSelect} on:clear={handleLicenseClear} />\n    <HelpText type=\"report\" field=\"license\" />\n  </div>\n</details>\n\n<details open>\n  <summary>\n    <HeaderWithAnchor id=\"related-openacrs\" level=2>Related OpenACRs</HeaderWithAnchor>\n  </summary>\n\n  <p>{helpText[\"related_openacrs\"][\"intro\"]}</p>\n\n  {#each $evaluation['related_openacrs'] as related, index}\n    <Related id={index} count={index + 1} on:DELETE=\"{handleRelatedDelete}\" />\n  {/each}\n\n  <AddOther label=\"Add related OpenACR\" on:ADD=\"{handleRelatedAdd}\"></AddOther>\n</details>\n\n<details open>\n  <summary>\n    <HeaderWithAnchor id=\"disabled-chapters\" level=2>Disabled Chapters/Tables</HeaderWithAnchor>\n  </summary>\n\n  <p>{helpText[\"disabled_chapters\"][\"intro\"]}</p>\n\n  {#each catalog.chapters as chapter}\n    <div class=\"field\">\n      <label>\n        <input\n          type=\"checkbox\"\n          value={chapter.id}\n          bind:checked=\"{$evaluation['chapters'][chapter.id]['disabled']}\"\n          id=\"evaluation-disabled-chapter-{chapter.id}\"\n          on:change={() => evaluation.updateCache($evaluation)} />\n\n        {chapter.label}\n      </label>\n      <HelpText type=\"disabled_chapters\" field=\"{chapter.id}\" />\n    </div>\n  {/each}\n</details>\n\n<Pager label=\"Previous/Next Principle\">\n  <PagerLink to=\"/\" direction=\"previous\">Overview</PagerLink>\n  <PagerLink to=\"/chapter/success_criteria_level_a\" direction=\"next\">A</PagerLink>\n</Pager>\n"
  ],
  "names": [],
  "mappings": "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"
}